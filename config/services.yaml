# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
  default_locale: en
  sulu.model.user.class: App\Entity\User
  map.width: '%env(MAP_WIDTH)%'
  map.directory: '%kernel.project_dir%/var/storage/map'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: [ 'controller.service_arguments' ]

  # add controllers as services that are specific to a certain sulu context
  # a sulu context is a different mode in the kernel allowing to have a different set of services
  # because controllers might rely on services only existing in one of both contexts
  App\Controller\Admin\:
    resource: '../src/Controller/Admin'
    tags: [ 'controller.service_arguments', { name: 'sulu.context', context: 'admin' } ]

  App\Controller\Website\:
    resource: '../src/Controller/Website'
    tags: [ 'controller.service_arguments', { name: 'sulu.context', context: 'website' } ]

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  OpenTribes\Core\UseCase\DisplayBuildingSlots:
    arguments: [ '@App\Repository\DBALBuildingRepository' ]


  OpenTribes\Core\UseCase\CreateFirstCityUseCase:
    arguments: [
      '@App\Repository\DBALCityRepository',
      '@App\Repository\DBALUserRepository',
      '@OpenTribes\Core\Service\SimpleLocationFinder'
    ]

  OpenTribes\Core\UseCase\ViewMapUseCase:
    arguments: [
      '@App\Repository\SimplexNoiseTileRepository',
      '@App\Repository\DBALCityRepository'
    ]

  App\Repository\SimplexNoiseTileRepository:
    arguments: [ '@BlackScorp\SimplexNoise\Noise2D' ]

  App\Repository\TextMapTileRepository:
    arguments: [
      '%map.directory%',
      '%map.width%'
    ]

  App\Command\GenerateMap:
    arguments: ['%map.directory%']
    tags:
      - { name: console.command }

  App\Command\GenerateMapPart:
    arguments: ['%map.directory%']
    tags:
      - { name: console.command }

  OpenTribes\Core\Service\SimpleLocationFinder:
    arguments: [ '@App\Repository\DBALCityRepository','10' ]

  App\Repository\DBALUserRepository:
    arguments: [ 'App\Entity\User' ]
    factory: [ '@doctrine.orm.default_entity_manager','getRepository' ]

  BlackScorp\SimplexNoise\Noise2D:
    arguments: [ 0.0025,3,0.5,1.5 ]
